<?php

namespace LocIHM\LocationBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * VehiculeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VehiculeRepository extends EntityRepository
{
	public function getVehNotInContrat($type, $requete)
	{
		$qb = $this->createQueryBuilder('vehicule');

		if(count($requete) > 0) {
			foreach($requete as $value) {
				$tab[] = $value->getVehicule()->getId();
			}
			$qb
				->where('vehicule.typeVehicule = :type')
				->setParameter('type', $type)
				->andWhere($qb->expr()->notIn('vehicule.id', $tab))
			;

		} else {
			$qb
				->where('vehicule.typeVehicule = :type')
				->setParameter('type', $type)
			;
		}

		$qb = $qb->getQuery()->getResult();
		return $qb;
	}

	/*
	 * Retourne faux si le véhicule n'est pas dispo
	 * Retourne le vehicule si dispo
	 */
	public function isVehDispo($idveh, $contrats)
	{
		if(count($contrats) > 0) {
			return false;
		} else {
			$qb = $this->createQueryBuilder('vehicule');
			$qb
				->where('vehicule.id = :id')
				->setParameter('id', $idveh)
			;

			$vehicules = $qb->getQuery()->getResult();

			// Surement inutile, mais je préfère m'assurer que l'on ne retourne qu'un seul véhicule, et le bon
			foreach($vehicules as $vehicule) {
				if($vehicule->getId() == $idveh) {
					return $vehicule;
				}
			}
		}
	}

	/*
	 * Compte le nombre de voitures
	 */
	public function countVehicules()
	{
		$qb = $this->createQueryBuilder('vehicule');

		$qb
			->select('COUNT(vehicule.id)')
		;
		return $qb->getQuery()->getSingleScalarResult();
	}

	/*
	 * Compte le nombre de voitures de tourisme
	 */
	public function countVehiculesByType($categorie)
	{
		$qb = $this->createQueryBuilder('vehicule');

		$qb
			->join('vehicule.typeVehicule', 'typeVehicule')
			->addSelect('typeVehicule')
			->select('COUNT(vehicule.id)')
			->where('typeVehicule.categorie = :categorie')
			->setParameter('categorie', $categorie)
		;
		return $qb->getQuery()->getSingleScalarResult();
	}

}
